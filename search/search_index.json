{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Vis\u00e3o Geral - ReMed.io","text":"<p>ReMed.io \u00e9 um sistema de gerenciamento de estoque para farm\u00e1cias, desenvolvido com o objetivo de digitalizar e automatizar os processos de controle de produtos, vendas e movimenta\u00e7\u00f5es de estoque. Seu principal objetivo \u00e9 fornecer uma plataforma eficiente para o gerenciamento de medicamentos, cosm\u00e9ticos e suplementos, garantindo rastreabilidade, seguran\u00e7a e precis\u00e3o nas opera\u00e7\u00f5es de entrada, sa\u00edda e comercializa\u00e7\u00e3o de itens farmac\u00eauticos.</p>"},{"location":"#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"Camada Ferramentas / Tecnologias Frontend React, TypeScript, TailwindCSS Backend FastAPI, Python 3.11 Banco de Dados PostgreSQL, DBeaver DevOps Docker, Docker Compose Outras libs Pydantic, SQLAlchemy, Pyenv"},{"location":"#arquitetura-do-sistema","title":"Arquitetura do sistema","text":"<p>O projeto adota uma arquitetura modular baseada em reposit\u00f3rios independentes, organizados de forma a promover separa\u00e7\u00e3o de responsabilidades e facilidade de manuten\u00e7\u00e3o. A aplica\u00e7\u00e3o \u00e9 composta por tr\u00eas principais reposit\u00f3rios:</p> <ul> <li><code>Backend-estoque</code>: API RESTful desenvolvida em Python com FastAPI, estruturada em camadas segundo o padr\u00e3o MVC (Model-View-Controller).</li> <li><code>Frontend</code>: Aplica\u00e7\u00e3o React respons\u00e1vel pela interface do usu\u00e1rio, comunica\u00e7\u00e3o com a API e experi\u00eancia interativa.</li> <li><code>Docs</code>: Documenta\u00e7\u00e3o t\u00e9cnica e gerencial do projeto, escrita em Markdown.</li> </ul>"},{"location":"#comunicacao-entre-os-componentes","title":"Comunica\u00e7\u00e3o entre os Componentes","text":"<ul> <li>O frontend comunica-se com o backend via requisi\u00e7\u00f5es HTTP usando <code>axios</code>, consumindo endpoints REST da API FastAPI.</li> <li>O backend persiste e consulta dados no banco de dados PostgreSQL por meio do SQLAlchemy.</li> <li>Todas as regras de neg\u00f3cio ficam encapsuladas em servi\u00e7os no backend, mantendo o frontend simples e desacoplado.</li> </ul>"},{"location":"#diagrama-de-classes","title":"Diagrama de Classes","text":"<p>O diagrama de classes representa a estrutura orientada a objetos do sistema ReMed.io adaptado do Diagrama de Classes do projeto antigo. </p> <p> </p>"},{"location":"backlog/","title":"Product Backlog \u2014 Sistema ReMed.io","text":"<p>Este backlog cont\u00e9m as funcionalidades principais do sistema, baseadas no Diagrama de Classe e nas regras de neg\u00f3cio do sistema ReMed.io.</p>"},{"location":"backlog/#board-kanban","title":"Board Kanban","text":""},{"location":"backlog/#historias","title":"\ud83d\udd34 Hist\u00f3rias","text":""},{"location":"backlog/#historia-1-cadastro-de-produtos-catalogo","title":"Hist\u00f3ria 1 \u2014 Cadastro de Produtos (Cat\u00e1logo)","text":"<p>Como administrador Quero cadastrar produtos no cat\u00e1logo Para organizar os tipos de produtos que a farm\u00e1cia comercializa  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Deve ser poss\u00edvel cadastrar produtos base, vinculando-os a uma subcategoria: Medicamento, Cosm\u00e9tico ou Suplemento Alimentar.  </li> <li>Cada subclasse deve conter atributos espec\u00edficos (ex.: tarja para medicamentos, tipo de pele para cosm\u00e9ticos, sabor para suplementos).  </li> <li>Este cadastro n\u00e3o cont\u00e9m informa\u00e7\u00f5es operacionais como pre\u00e7o, validade ou quantidade \u2014 apenas dados descritivos.  </li> </ul>"},{"location":"backlog/#historia-2-cadastro-de-fornecedores","title":"Hist\u00f3ria 2 \u2014 Cadastro de Fornecedores","text":"<p>Como administrador Quero cadastrar fornecedores Para associ\u00e1-los aos lotes de produtos adquiridos  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Cadastro de nome, CNPJ, telefone, e-mail e endere\u00e7o.  </li> <li>Fornecedor pode ser associado a diferentes lotes (<code>ItemEstoque</code>).  </li> </ul>"},{"location":"backlog/#historia-3-cadastro-de-armazens","title":"Hist\u00f3ria 3 \u2014 Cadastro de Armaz\u00e9ns","text":"<p>Como administrador Quero cadastrar locais de armazenamento Para organizar onde os produtos est\u00e3o fisicamente ou logicamente armazenados  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Cadastro do nome do armaz\u00e9m (ex.: Estoque Central, Balc\u00e3o, Cosm\u00e9ticos).  </li> <li>Defini\u00e7\u00e3o de quantidade m\u00ednima para cada produto nesse armaz\u00e9m (para alertas de estoque baixo).  </li> </ul>"},{"location":"backlog/#historia-4-cadastro-de-itens-de-estoque","title":"Hist\u00f3ria 4 \u2014 Cadastro de Itens de Estoque","text":"<p>Como administrador Quero cadastrar itens de estoque Para controlar validade, pre\u00e7o e fornecedor de cada entrada de produto  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Cadastro de c\u00f3digo de barras, pre\u00e7o de venda, data de validade, fornecedor e armaz\u00e9m.  </li> <li>Cada <code>ItemEstoque</code> est\u00e1 vinculado a um <code>ProdutoBase</code>.  </li> </ul>"},{"location":"backlog/#historia-5-movimentacao-de-estoque-entradas-e-saidas","title":"Hist\u00f3ria 5 \u2014 Movimenta\u00e7\u00e3o de Estoque (Entradas e Sa\u00eddas)","text":"<p>Como administrador Quero registrar entradas e sa\u00eddas de estoque Para manter o controle atualizado dos produtos dispon\u00edveis  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Movimenta\u00e7\u00e3o deve conter: data, tipo (entrada ou sa\u00edda), quantidade, e item de estoque (lote).  </li> <li>Deve atualizar automaticamente a quantidade no armaz\u00e9m.  </li> <li>Valida se h\u00e1 saldo suficiente para sa\u00eddas.  </li> </ul>"},{"location":"backlog/#historia-6-consulta-e-monitoramento-de-estoque","title":"Hist\u00f3ria 6 \u2014 Consulta e Monitoramento de Estoque","text":"<p>Como administrador Quero consultar o estoque atual Para verificar quantidades, validade, localiza\u00e7\u00e3o e status dos produtos  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Listagem de quantidade atual, validade, armaz\u00e9m e fornecedor dos itens.  </li> <li>Destacar produtos vencidos ou com estoque abaixo do m\u00ednimo.  </li> </ul>"},{"location":"backlog/#historia-7-venda-de-produtos-com-rastreamento-de-lote-itens-de-estoque","title":"Hist\u00f3ria 7 \u2014 Venda de Produtos com Rastreamento de Lote (Itens de estoque)","text":"<p>Como atendente Quero realizar vendas selecionando itens espec\u00edficos do estoque Para garantir rastreabilidade dos lotes e validade  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>A venda deve permitir selecionar quais lotes est\u00e3o sendo vendidos.  </li> <li>Impede a venda de produtos vencidos.  </li> <li>Calcula automaticamente o valor total.  </li> <li>Gera comprovante textual da venda com detalhes dos itens (incluindo lote e validade).  </li> </ul>"},{"location":"backlog/#historia-8-relatorio-de-produtos-vencidos-e-proximos-do-vencimento","title":"Hist\u00f3ria 8 \u2014 Relat\u00f3rio de Produtos Vencidos e Pr\u00f3ximos do Vencimento","text":"<p>Como administrador Quero gerar relat\u00f3rios de produtos vencidos ou prestes a vencer Para tomar decis\u00f5es de descarte ou promo\u00e7\u00e3o dos produtos  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>Listagem de produtos com validade expirada ou a vencer em at\u00e9 X dias (par\u00e2metro configur\u00e1vel).  </li> </ul>"},{"location":"backlog/#historia-9-relatorio-de-movimentacoes-de-estoque","title":"Hist\u00f3ria 9 \u2014 Relat\u00f3rio de Movimenta\u00e7\u00f5es de Estoque","text":"<p>Como administrador Quero gerar um relat\u00f3rio de movimenta\u00e7\u00f5es Para acompanhar todo o hist\u00f3rico de entradas e sa\u00eddas do estoque  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o:</p> <ul> <li>Relat\u00f3rio deve incluir: data, tipo de movimenta\u00e7\u00e3o, quantidade, item de estoque (produto + lote), e armaz\u00e9m.  </li> </ul>"},{"location":"backlog/#historia-10-alerta-de-estoque-critico","title":"Hist\u00f3ria 10 \u2014 Alerta de Estoque Cr\u00edtico","text":"<p>Como administrador Quero receber alertas de estoque cr\u00edtico Para evitar falta de produtos essenciais  </p> <p>Crit\u00e9rios de aceita\u00e7\u00e3o: </p> <ul> <li>O sistema deve emitir alertas sempre que a quantidade de um item estiver igual ou abaixo da quantidade m\u00ednima definida para o armaz\u00e9m.  </li> </ul>"},{"location":"backlog/#em-andamento","title":"\ud83d\udfe1 Em andamento","text":"<p>Hist\u00f3rias que est\u00e3o em desenvolvimento. </p>"},{"location":"backlog/#concluido","title":"\ud83d\udfe2 Conclu\u00eddo","text":"<p>Hist\u00f3rias que j\u00e1 foram finalizadas. </p>"},{"location":"projeto-antigo/","title":"Projeto Antigo - Farm\u00e1cia da M\u00e1rcia","text":"<p>O Projeto Farm\u00e1cia da M\u00e1rcia foi desenvolvido inicialmente como parte da disciplina de Orienta\u00e7\u00e3o a Objetos com o objetivo de criar um sistema simples de gerenciamento de estoque farmac\u00eautico. A aplica\u00e7\u00e3o permite que o administrador visualize, adicione, remova e edite produtos dispon\u00edveis em sua farm\u00e1cia por meio de uma interface</p>"},{"location":"projeto-antigo/#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":"Camada Ferramentas / Tecnologias Frontend Java Swing Backend Java 11 Banco de Dados MySQL Testes JUnit Outras libs  Maven, Hibernate (JPA)"},{"location":"projeto-antigo/#arquitetura-original","title":"Arquitetura Original","text":"<p>A arquitetura do projeto foi constru\u00edda em Java utilizando o padr\u00e3o orientado a objetos cl\u00e1ssico. Ela se baseia em tr\u00eas principais camadas:</p> <ul> <li><code>Modelo (Model)</code>: Representa as entidades do dom\u00ednio, como <code>Produto</code>, <code>Medicamento</code>, <code>Cosmetico</code> e <code>Farmacia</code>.</li> <li><code>Persist\u00eancia (DAO)</code>: Camada respons\u00e1vel pelo gerenciamento dos dados via JPA/Hibernate com banco de dados MySQL.</li> <li><code>Interface (View)</code>: Intera\u00e7\u00e3o via console com menus de sele\u00e7\u00e3o para o administrador da farm\u00e1cia.</li> </ul> <p>Al\u00e9m disso, o sistema utiliza o Maven para gerenciamento de depend\u00eancias e o JUnit para testes unit\u00e1rios.</p>"},{"location":"projeto-antigo/#diagrama-de-classes","title":"Diagrama de Classes","text":"<p>A estrutura de classes do sistema \u00e9 apresentada abaixo</p> <p> </p>"},{"location":"projeto-antigo/#principais-componentes","title":"Principais Componentes","text":"<ul> <li> <p>Farmacia   Representa a farm\u00e1cia que possui uma lista de produtos. Respons\u00e1vel por adicionar e remover itens do estoque.</p> </li> <li> <p>Produto (abstrata)   Superclasse para os produtos cadastrados, contendo atributos comuns como nome, fabricante, validade e valor.</p> </li> <li> <p>Medicamento   Subclasse de <code>Produto</code> com informa\u00e7\u00f5es espec\u00edficas como indica\u00e7\u00e3o terap\u00eautica, dosagem e via de administra\u00e7\u00e3o.</p> </li> <li> <p>Cosmetico   Subclasse de <code>Produto</code> contendo dados sobre aplica\u00e7\u00e3o e fun\u00e7\u00e3o est\u00e9tica.</p> </li> </ul>"},{"location":"regra-negocio/","title":"Regras de Neg\u00f3cio - Sistema ReMed.io","text":"<p>Nesta se\u00e7\u00e3o s\u00e3o apresentadas as regras de neg\u00f3cio do sistema, baseadas na modelagem atualizada e nas funcionalidades propostas. Este documento oferece uma vis\u00e3o clara e objetiva dos processos que ser\u00e3o implementados, alinhados com as pr\u00e1ticas operacionais do setor farmac\u00eautico.</p>"},{"location":"regra-negocio/#objetivos-do-sistema","title":"Objetivos do Sistema","text":"<ul> <li>Gerenciar produtos farmac\u00eauticos, cosm\u00e9ticos e suplementos alimentares.</li> <li>Controlar o estoque (incluindo entradas, sa\u00eddas e quantidade m\u00ednima).</li> <li>Monitorar validade dos produtos e bloquear vendas de itens vencidos.</li> <li>Registrar e rastrear movimenta\u00e7\u00f5es de estoque.</li> <li>Associar produtos a fornecedores.</li> <li>Registrar vendas, garantindo rastreabilidade dos lotes vendidos.</li> <li>Emitir alertas de estoque baixo e vencimento pr\u00f3ximo.</li> </ul>"},{"location":"regra-negocio/#modelagem-de-estoque-descricao-geral","title":"Modelagem de Estoque \u2014 Descri\u00e7\u00e3o Geral","text":""},{"location":"regra-negocio/#separacao-entre-produto-e-itemestoque","title":"Separa\u00e7\u00e3o entre Produto e ItemEstoque","text":"<ul> <li> <p>Produto (<code>ProdutoBase</code> e suas subclasses) representa o cat\u00e1logo de produtos da farm\u00e1cia. Armazena informa\u00e7\u00f5es descritivas como: </p> <ul> <li>Nome</li> <li>Descri\u00e7\u00e3o</li> <li>volume</li> <li><code>medicamentos</code>: Tarja, necessidade de receita, dosagem, principio ativo, forma farmaceutica e via de administra\u00e7\u00e3o</li> <li><code>consm\u00e9ticos</code>:Tipo e faixa et\u00e1ria </li> <li><code>suplementos</code>:Tipo, sabor e restri\u00e7\u00e3o</li> </ul> </li> </ul> <p>\u26a0\ufe0f Produtos n\u00e3o possuem informa\u00e7\u00f5es operacionais como pre\u00e7o, validade ou quantidade \u2014 essas informa\u00e7\u00f5es est\u00e3o no <code>ItemEstoque</code>.</p> <ul> <li> <p>ItemEstoque representa uma unidade f\u00edsica ou lote de um produto dentro da farm\u00e1cia. Cont\u00e9m informa\u00e7\u00f5es operacionais:</p> <ul> <li>C\u00f3digo de barras</li> <li>Pre\u00e7o de venda</li> <li>Data de validade</li> <li>Fornecedor associado</li> </ul> </li> </ul> <p>Analogia: <code>ProdutoBase</code>: \"Dipirona 500mg comprimido\" <code>ItemEstoque</code>: \"Caixa de Dipirona 500mg, validade 05/2026, pre\u00e7o R$10,00, fornecedor Farmac Distribuidora\"</p>"},{"location":"regra-negocio/#gestao-de-estoque-e-armazenamento","title":"Gest\u00e3o de Estoque e Armazenamento","text":"<ul> <li>A classe Armazem representa os locais de armazenamento, que podem ser f\u00edsicos (ex.: estoque central, balc\u00e3o) ou l\u00f3gicos (ex.: estoque de cosm\u00e9ticos).</li> <li> <p>Cada armaz\u00e9m possui uma lista de <code>ItemEstoque</code> e controla:</p> <ul> <li>Quantidade atual</li> <li>Quantidade m\u00ednima (para disparo de alertas)</li> <li>Localiza\u00e7\u00e3o dos produtos</li> <li>Validade dos itens (permitindo identificar vencidos ou pr\u00f3ximos do vencimento)</li> </ul> </li> </ul>"},{"location":"regra-negocio/#movimentacao-de-estoque","title":"Movimenta\u00e7\u00e3o de Estoque","text":"<ul> <li> <p>Toda entrada (compra, reposi\u00e7\u00e3o) ou sa\u00edda (venda, descarte) de itens gera uma MovimentacaoEstoque, que:</p> <ul> <li>Possui data, tipo (<code>Entrada</code> ou <code>Sa\u00edda</code>), quantidade e item associado.</li> <li>Atualiza automaticamente a quantidade dispon\u00edvel no armaz\u00e9m.</li> <li>Mant\u00e9m um hist\u00f3rico rastre\u00e1vel de movimenta\u00e7\u00f5es.</li> </ul> </li> </ul>"},{"location":"regra-negocio/#processo-de-venda","title":"Processo de Venda","text":"<ul> <li>A venda \u00e9 representada pela classe Venda, composta por um ou mais ItemVenda, cada um vinculado a um <code>ItemEstoque</code>.</li> <li>Permite:<ul> <li>Identificar exatamente qual lote foi vendido.</li> <li>Associar pre\u00e7o, validade e fornecedor espec\u00edficos do momento da venda.</li> <li>Atender \u00e0s exig\u00eancias da vigil\u00e2ncia sanit\u00e1ria sobre rastreabilidade.</li> </ul> </li> </ul>"},{"location":"regra-negocio/#regras-de-negocio-aplicadas","title":"Regras de Neg\u00f3cio Aplicadas","text":"<ul> <li>Controle de venda de produto sem estoque: Nenhuma venda pode ser realizada de um item que n\u00e3o tenha quantidade suficiente no estoque.</li> <li>Controle de venda de produtos vencidosProdutos vencidos n\u00e3o podem ser vendidos (checado via m\u00e9todo checar_validade()).</li> <li>Controle de quantidade de estoqueAlertas s\u00e3o emitidos caso a quantidade de um item atinja ou fique abaixo da quantidade m\u00ednima estabelecida.</li> <li>Controle de rastreabilidade: Todo produto vendido mant\u00e9m v\u00ednculo com o lote espec\u00edfico (via ItemEstoque), permitindo rastreabilidade conforme exig\u00eancias legais da vigil\u00e2ncia sanit\u00e1ria.</li> </ul>"}]}